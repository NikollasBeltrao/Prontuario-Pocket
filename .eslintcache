[{"C:\\Users\\beltr\\React JS\\prontuario\\src\\App.tsx":"1","C:\\Users\\beltr\\React JS\\prontuario\\src\\Header.tsx":"2","C:\\Users\\beltr\\React JS\\prontuario\\src\\Login\\LoginPage.tsx":"3","C:\\Users\\beltr\\React JS\\prontuario\\src\\index.tsx":"4","C:\\Users\\beltr\\React JS\\prontuario\\src\\routes.tsx":"5","C:\\Users\\beltr\\React JS\\prontuario\\src\\reportWebVitals.ts":"6","C:\\Users\\beltr\\React JS\\prontuario\\src\\Home\\HomePage.tsx":"7","C:\\Users\\beltr\\React JS\\prontuario\\src\\Register\\RegisterPage.tsx":"8","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\firebase.ts":"9","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\auth.ts":"10","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\realtime.ts":"11","C:\\Users\\beltr\\React JS\\prontuario\\src\\medico\\Home.tsx":"12","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\firestore.ts":"13","C:\\Users\\beltr\\React JS\\prontuario\\src\\paciente\\Home.tsx":"14","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\apiImg.ts":"15"},{"size":630,"mtime":1610216811554,"results":"16","hashOfConfig":"17"},{"size":1204,"mtime":1610747119499,"results":"18","hashOfConfig":"17"},{"size":5191,"mtime":1610231927291,"results":"19","hashOfConfig":"17"},{"size":480,"mtime":1609634632073,"results":"20","hashOfConfig":"17"},{"size":982,"mtime":1610760064677,"results":"21","hashOfConfig":"17"},{"size":425,"mtime":1609633898226,"results":"22","hashOfConfig":"17"},{"size":448,"mtime":1609721271920,"results":"23","hashOfConfig":"17"},{"size":15000,"mtime":1610836070143,"results":"24","hashOfConfig":"17"},{"size":731,"mtime":1610759533714,"results":"25","hashOfConfig":"17"},{"size":102,"mtime":1609789009828,"results":"26","hashOfConfig":"17"},{"size":118,"mtime":1609790196903,"results":"27","hashOfConfig":"17"},{"size":12895,"mtime":1610846606206,"results":"28","hashOfConfig":"17"},{"size":122,"mtime":1609789040001,"results":"29","hashOfConfig":"17"},{"size":12029,"mtime":1610847472439,"results":"30","hashOfConfig":"17"},{"size":159,"mtime":1610844574859,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"w1qzex",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\beltr\\React JS\\prontuario\\src\\App.tsx",["70","71","72"],"import React from 'react';\nimport './App.css';\nimport Routes from './routes';\nimport db from './Service/firebase';\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { textSpanEnd } from 'typescript';\n//<Header title='MyMedicalRecord'></Header>\nconst App: React.FC = (props) => {\n  interface User {\n    nome: string\n  }\n  function teste() {\n    db.firestore().collection(\"User\").add({ nome: 'Nikollas' }).then(res => {\n      console.log(res);\n    }).catch(console.error);\n\n  }\n  return (\n    <div className=\"app\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\beltr\\React JS\\prontuario\\src\\Header.tsx",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\Login\\LoginPage.tsx",[],["73","74"],"C:\\Users\\beltr\\React JS\\prontuario\\src\\index.tsx",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\routes.tsx",[],["75","76"],"C:\\Users\\beltr\\React JS\\prontuario\\src\\reportWebVitals.ts",[],["77","78"],"C:\\Users\\beltr\\React JS\\prontuario\\src\\Home\\HomePage.tsx",["79","80","81","82","83"],"import React, { ChangeEvent, useState } from 'react';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsArrowLeftShort, BsPlus } from 'react-icons/bs';\r\nimport Login from '../Login/LoginPage';\r\n\r\nconst Home: React.FC = (props) => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"home-container\">\r\n                <Login/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","C:\\Users\\beltr\\React JS\\prontuario\\src\\Register\\RegisterPage.tsx",["84"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\r\nimport './Register.css';\r\nimport '../Login/login.css'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { BsArrowLeftShort, BsPlus } from 'react-icons/bs';\r\nimport auth from '../Service/auth';\r\nimport firestore from '../Service/firestore';\r\n\r\nconst Register: React.FC = (props) => {\r\n    const history = useHistory();\r\n    const [tipo, setTipo] = useState('');\r\n    const [form, setForm] = useState(false);\r\n    const [tab, setTab] = useState(0);\r\n    const [tabM, setTabM] = useState(0);\r\n    const [err, setErr] = useState('');\r\n    const [dataMedico, setDataMedico] = useState({\r\n        nome: '',\r\n        email: '',\r\n        foto: '',\r\n        senha: ''\r\n    });\r\n    const [confSenhaM, setConfSenhaM] = useState('');\r\n    const [dataPaciente, setDataPaciente] = useState({\r\n        nome: '',\r\n        email: '',\r\n        senha: '',\r\n        tipoS: '',\r\n        foto: '',\r\n        dataN: ''\r\n\r\n    });\r\n\r\n    const [confSenhaP, setConfSenhaP] = useState('');\r\n\r\n    function handlerTipo(tipo: string) {\r\n        setTipo(tipo);\r\n        setForm(true);\r\n    }\r\n\r\n\r\n    async function handlerCadastrarPaciente(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (dataPaciente.email !== '' && dataPaciente.senha !== '' && confSenhaP !== '' && dataPaciente.nome !== ''\r\n            && dataPaciente.tipoS !== '' && dataPaciente.dataN !== '' && (confSenhaP === dataPaciente.senha)) {\r\n            setErr('');\r\n            await auth.createUserWithEmailAndPassword(dataPaciente.email, dataPaciente.senha)\r\n                .then(async (user) => {\r\n                    let dataUser = {\r\n                        nome: dataPaciente.nome,\r\n                        email: dataPaciente.email,\r\n                        dataN: dataPaciente.dataN,\r\n                        tipoS: dataPaciente.tipoS,\r\n                        imagem: dataPaciente.foto,\r\n                        tipo: \"paciente\"\r\n                    }\r\n                    await firestore.collection('Paciente').doc(user?.user?.uid).set(dataUser)\r\n                        .then((res) => {\r\n                            console.log(res);\r\n                        })\r\n                        .catch((res) => {\r\n                            setErr('Falha ao cadastrar os dados');\r\n                        });\r\n                    await auth.signInWithEmailAndPassword(dataPaciente.email, dataPaciente.senha)\r\n                        .then(async (usera) => {\r\n                            let u = await auth.currentUser;\r\n                            await u?.updateProfile({\r\n                                displayName: dataPaciente.nome,\r\n                                photoURL: dataPaciente.foto\r\n                            }).then(function (a) {\r\n                                console.log(a)\r\n                                setErr(\"\");\r\n                                // Update successful.\r\n                            }).catch(function (error) {\r\n                                // An error happened.\r\n                            });\r\n                            localStorage.setItem('currentUser', JSON.stringify(usera));\r\n                            history.push('/paciente');\r\n                        })\r\n                        .catch((error) => {\r\n                            setErr('Falha ao fazer login');\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    setErr('Falha ao cadastrar os dados');\r\n                    // ..\r\n                });\r\n        }\r\n        else {\r\n            if (confSenhaP === dataPaciente.senha) {\r\n                setErr('Preencha todos os campos');\r\n            }\r\n            else {\r\n                setErr('As senhas devem ser iguais');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handlerLoginP(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataPaciente({ ...dataPaciente, email: event.target.value });\r\n    }\r\n\r\n    function handlerNomeP(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataPaciente({ ...dataPaciente, nome: event.target.value });\r\n    }\r\n\r\n    function handlerDataP(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataPaciente({ ...dataPaciente, dataN: event.target.value });\r\n    }\r\n\r\n    function handlerTipoSP(event: ChangeEvent<HTMLSelectElement>) {\r\n        setDataPaciente({ ...dataPaciente, tipoS: event.target.value });\r\n    }\r\n\r\n    function handlerConfSenhaP(event: ChangeEvent<HTMLInputElement>) {\r\n        setConfSenhaP(event.target.value);\r\n    }\r\n\r\n    function handlerSenhaP(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataPaciente({ ...dataPaciente, senha: event.target.value });\r\n        //await realtime.ref('User').set({\r\n        //    nome: event.target.value,\r\n        //});\r\n    }\r\n\r\n\r\n    async function handlerCadastrarMedico(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (dataMedico.email !== '' && dataMedico.senha !== '' && confSenhaM !== '' && dataMedico.nome !== ''\r\n            && (confSenhaM === dataMedico.senha)) {\r\n            setErr('');\r\n            await auth.createUserWithEmailAndPassword(dataMedico.email, dataMedico.senha)\r\n                .then(async (user) => {\r\n                    let dataUser = {\r\n                        nome: dataMedico.nome,\r\n                        email: dataMedico.email,\r\n                        tipo: 'medico'\r\n                    }\r\n                    await firestore.collection('Medico').doc(user?.user?.uid).set(dataUser)\r\n                        .then((res) => {\r\n                            console.log(res);\r\n                        })\r\n                        .catch((res) => {\r\n                            setErr('Falha ao cadastrar os dados');\r\n                        });\r\n                    await auth.signInWithEmailAndPassword(dataMedico.email, dataMedico.senha)\r\n                        .then(async (usera) => {\r\n                            let u = await auth.currentUser;\r\n                            await u?.updateProfile({\r\n                                displayName: dataMedico.nome,\r\n                                photoURL: dataMedico.foto\r\n                            }).then(function () {\r\n                                setErr(\"\");\r\n                                // Update successful.\r\n                            }).catch(function (error) {\r\n                                // An error happened.\r\n                            });\r\n\r\n                            localStorage.setItem('currentUser', JSON.stringify(usera));\r\n                            history.push('/medico');\r\n                        })\r\n                        .catch((error) => {\r\n                            setErr('Falha as fazer login');\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    setErr('Falha ao cadastrar os dados');\r\n                });\r\n        }\r\n        else {\r\n            if (confSenhaM === dataMedico.senha) {\r\n                setErr('Preencha todos os campos');\r\n            }\r\n            else {\r\n                setErr('As senhas devem ser iguais');\r\n            }\r\n        }\r\n    }\r\n    function handlerFotoM(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataMedico({ ...dataMedico, foto: event.target.value });\r\n    }\r\n\r\n    function handlerFotoP(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataPaciente({ ...dataPaciente, foto: event.target.value });\r\n    }\r\n    function handlerLoginM(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataMedico({ ...dataMedico, email: event.target.value });\r\n    }\r\n\r\n    function handlerNomeM(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataMedico({ ...dataMedico, nome: event.target.value });\r\n    }\r\n\r\n    function handlerConfSenhaM(event: ChangeEvent<HTMLInputElement>) {\r\n        setConfSenhaM(event.target.value);\r\n        if (dataMedico.senha.substr(0, event.target.value.length) !== event.target.value) {\r\n            setErr(\"As senhas devem ser iguais\");\r\n        }\r\n        else {\r\n            setErr(\"\");\r\n        }\r\n    }\r\n\r\n    function handlerSenhaM(event: ChangeEvent<HTMLInputElement>) {\r\n        setDataMedico({ ...dataMedico, senha: event.target.value });\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"register-container\">\r\n                {form ? <button className=\"voltar\" onClick={() => setForm(false)}><BsArrowLeftShort /></button> : ''}\r\n                <h2>Bem vindo(a) ao Med<BsPlus /></h2>\r\n                {!form ? <div className=\"buttons-container\">\r\n                    <button onClick={() => handlerTipo('medico')}>Quero criar uma conta empresarial</button>\r\n                    <p>ou</p>\r\n                    <button onClick={() => handlerTipo('paciente')}>Quero criar uma conta pessoal</button>\r\n                </div> :\r\n                    <div className=\"form-container-register\">\r\n                        <div>\r\n                            <h3>{tipo === 'medico' ? 'Faça sua conta empresarial' : 'Faça sua conta pessoal'}</h3>\r\n                            <small>{tipo === 'medico' ? 'Torne o atendimento aos seus clientes mais rápido e fácil' :\r\n                                'Tenha fácil acesso aos seus dados médicos'}</small>\r\n                        </div>\r\n                        {tipo === 'paciente' ?\r\n                            <form onSubmit={handlerCadastrarPaciente} >\r\n                                {tab === 0 ?\r\n                                    <div className=\"form\">\r\n                                        <label htmlFor=\"nome\">* Nome</label>\r\n                                        <input id='nome' type=\"text\" onChange={handlerNomeP} value={dataPaciente.nome} placeholder=\"Seu nome\" />\r\n\r\n                                        <label htmlFor=\"email\">* E-mail</label>\r\n                                        <input id='email' type=\"email\" onChange={handlerLoginP} value={dataPaciente.email} placeholder=\"Seu E-mail\" />\r\n\r\n                                        <label htmlFor=\"datan\">* Data de nascimento</label>\r\n                                        <input id=\"datan\" type=\"date\" onChange={handlerDataP} value={dataPaciente.dataN} />\r\n\r\n                                        <div><button type=\"button\" className=\"proximo\" onClick={() => setTab(1)}>Proximo</button></div>\r\n                                    </div> :\r\n                                    <div className=\"form\">\r\n                                        <label htmlFor=\"ts\">* Tipo sanguineo</label>\r\n                                        <select id='ts' className=\"sel\" value={dataPaciente.tipoS} onChange={handlerTipoSP}>\r\n                                            <option value=\"\">Seu tipo sanguineo</option>\r\n                                            <option value=\"A+\">A+</option>\r\n                                            <option value=\"A-\">A-</option>\r\n                                            <option value=\"B+\">B+</option>\r\n                                            <option value=\"B-\">B-</option>\r\n                                            <option value=\"AB+\">AB+</option>\r\n                                            <option value=\"AB-\">Ab-</option>\r\n                                            <option value=\"O+\">O+</option>\r\n                                            <option value=\"O-\">O-</option>\r\n                                        </select>\r\n                                        <label htmlFor=\"senha\">* Senha</label>\r\n                                        <input id='senha' type=\"password\" onChange={handlerSenhaP} value={dataPaciente.senha} placeholder=\"Sua senha\" />\r\n\r\n                                        <label htmlFor=\"conf\">* Confirmar senha</label>\r\n                                        <input id='conf' type=\"password\" onChange={handlerConfSenhaP} value={confSenhaP} placeholder=\"Confirme a senha\" />\r\n\r\n                                        <label htmlFor=\"f\">Foto (url)</label>\r\n                                        <input id='f' type=\"text\" onChange={handlerFotoP} value={dataPaciente.foto} placeholder=\"Url\" />\r\n                                        <small>{err}</small>\r\n                                        <div>\r\n                                            <button type=\"button\" className=\"anterior\" onClick={() => setTab(0)}>Anterior</button>\r\n                                            <button className=\"proximo\" type='submit'>Cadastrar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </form> :\r\n                            <form onSubmit={handlerCadastrarMedico}>\r\n                                {tabM === 0 ?\r\n                                    <div className=\"form\">\r\n                                        <label htmlFor=\"nome\">* Nome</label>\r\n                                        <input id='nome' type=\"text\" onChange={handlerNomeM} value={dataMedico.nome} placeholder=\"Seu nome\" />\r\n\r\n                                        <label htmlFor=\"email\">* E-mail</label>\r\n                                        <input id='email' type=\"email\" onChange={handlerLoginM} value={dataMedico.email} placeholder=\"Seu E-mail\" />\r\n                                        <small>{err}</small>\r\n                                        <div><button type=\"button\" className=\"proximo\" onClick={() => setTabM(1)}>Proximo</button></div>\r\n                                    </div> :\r\n                                    <div className=\"form\">\r\n                                        <label htmlFor=\"senha\">* Senha</label>\r\n                                        <input id='senha' type=\"password\" onChange={handlerSenhaM} value={dataMedico.senha} placeholder=\"Sua senha\" />\r\n\r\n                                        <label htmlFor=\"conf\">* Confirmar senha</label>\r\n                                        <input id='conf' type=\"password\" onChange={handlerConfSenhaM} value={confSenhaM} placeholder=\"Confirme a senha\" />\r\n\r\n                                        <label htmlFor=\"f\">Foto (url)</label>\r\n                                        <input id='f' type=\"text\" onChange={handlerFotoM} value={dataMedico.foto} placeholder=\"Url\" />\r\n                                        <small>{err}</small>\r\n                                        <div>\r\n                                            <button type=\"button\" className=\"anterior\" onClick={() => setTabM(0)}>Anterior</button>\r\n                                            <button className=\"proximo\" type='submit'>Cadastrar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </form>\r\n                        }\r\n                    </div>\r\n                }\r\n                <Link className=\"link\" to=\"/\">Fazer login</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Register;","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\firebase.ts",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\auth.ts",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\realtime.ts",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\medico\\Home.tsx",["85","86"],"import firebase from 'firebase';\r\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../Header';\r\nimport auth from '../Service/auth';\r\nimport firestore from '../Service/firestore';\r\nimport { VscFilePdf } from 'react-icons/vsc';\r\nimport api from '../Service/apiImg'\r\n\r\nimport './Home.css';\r\n\r\ninterface Props {\r\n    user?: any,\r\n    page?: string\r\n}\r\n\r\n\r\nconst HomeMedico: React.FC<Props> = (props) => {\r\n    const history = useHistory();\r\n    let storage = localStorage.getItem('currentUser');\r\n    const [user, setUser] = useState(JSON.parse(storage ? storage : '{}'));\r\n    const [alterar, setAlterar] = useState(false);\r\n    const [err, setErr] = useState('');\r\n    const [pesquisa, setpesquisar] = useState(false);\r\n    const [novoUser, setNovoUser] = useState({\r\n        nome: user.user ? user.user.displayName : '',\r\n        email: user.user ? user.user.email : '',\r\n        novaSenha: '',\r\n        senha: ''\r\n    });\r\n    const [paciente, setPaciente] = useState({\r\n        uid: '',\r\n        codigo: \"\",\r\n        dataN: \"\",\r\n        email: \"\",\r\n        imagem: \"\",\r\n        nome: \"\",\r\n        tipo: \"\"\r\n\r\n    });\r\n    const [exame, setExame] = useState({\r\n        arquivos: Array<File>(),\r\n        data: '',\r\n        desc: '',\r\n        medico: user.user.uid,\r\n        titulo: ''\r\n\r\n    });\r\n\r\n    const [loding, setLoding] = useState(false)\r\n    function handlerChange(event: ChangeEvent<HTMLInputElement>) {\r\n        setAlterar(true);\r\n        switch (event.target.id) {\r\n            case 'nome':\r\n                setNovoUser({ ...novoUser, nome: event.target.value });\r\n                break;\r\n            case 'novaSenha':\r\n                setNovoUser({ ...novoUser, novaSenha: event.target.value });\r\n                break;\r\n            case 'email':\r\n                setNovoUser({ ...novoUser, email: event.target.value });\r\n                break;\r\n            case 'senha':\r\n                setNovoUser({ ...novoUser, senha: event.target.value });\r\n                break;\r\n        }\r\n    }\r\n    async function handlerAlterar(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (novoUser.senha !== '') {\r\n            setErr(\"\");\r\n            await auth.signInWithEmailAndPassword(user.user.email, novoUser.senha)\r\n                .then(async res => {\r\n                    setLoding(true);\r\n                    let email = user.user.email;\r\n                    let senha = novoUser.senha;\r\n                    let u = await auth.currentUser;\r\n                    if (novoUser.nome !== '') {\r\n                        await firestore.collection(\"Medico\").doc(user.user.id).set({\r\n                            nome: novoUser.nome\r\n                        })\r\n                        await u?.updateProfile({\r\n                            displayName: novoUser.nome,\r\n                        }).then(function () {\r\n                            setErr(\"\");\r\n                            // Update successful.\r\n                        }).catch(function (error) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    if (novoUser.email !== '') {\r\n                        await firestore.collection(\"Medico\").doc(user.user.id).set({\r\n                            email: novoUser.email\r\n                        })\r\n                        await u?.updateEmail(novoUser.email).then(function () {\r\n                            email = novoUser.email;\r\n                            setErr(\"\");\r\n                            // Update successful.\r\n                        }).catch(function (err) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    if (novoUser.novaSenha !== '' && novoUser.novaSenha.length > 5) {\r\n                        await u?.updatePassword(novoUser.novaSenha).then(function () {\r\n                            senha = novoUser.novaSenha;\r\n                            setErr(\"\");\r\n                        }).catch(function (errr) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    else if (novoUser.novaSenha !== '') {\r\n                        setErr(\"Senha inválida\");\r\n                    }\r\n\r\n                    await auth.signInWithEmailAndPassword(email, senha)\r\n                        .then(u => {\r\n                            setUser(u);\r\n                            if (err === '') {\r\n                                alert(\"Alterado com sucesso!\");\r\n                            }\r\n\r\n                            localStorage.setItem('currentUser', JSON.stringify(u));\r\n                        }).catch(console.error);\r\n                    setLoding(false);\r\n\r\n                }, (err) => {\r\n                    if (err) {\r\n                        if (err.code === 'auth/wrong-password') {\r\n                            setErr(\"Senha incorreta\");\r\n                        }\r\n                        else if (err.code === 'auth/user-not-found') {\r\n                            setErr(\"Usuário não encontrado\");\r\n                        }\r\n                    }\r\n                }).catch(console.error);\r\n\r\n        }\r\n        else {\r\n            setErr('Digite sua senha atual');\r\n        }\r\n\r\n    }\r\n\r\n    async function pesquisar(event: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (event.key === \"Enter\") {\r\n            const e = event.target as HTMLInputElement;\r\n            await firestore.collection(\"Paciente\").where(\"codigo\", \"==\", e.value).get().then((res) => {\r\n                if (res?.docs[0]) {\r\n                    setPaciente({\r\n                        uid: res.docs[0].id,\r\n                        codigo: res.docs[0].data().codigo,\r\n                        dataN: res.docs[0].data().dataN,\r\n                        email: res.docs[0].data().email,\r\n                        imagem: res.docs[0].data().imagem,\r\n                        nome: res.docs[0].data().nome,\r\n                        tipo: res.docs[0].data().tipo\r\n                    });\r\n                    setpesquisar(true);\r\n                }\r\n                else {\r\n                    setPaciente({\r\n                        uid: \"\",\r\n                        codigo: \"\",\r\n                        dataN: \"\",\r\n                        email: \"\",\r\n                        imagem: \"\",\r\n                        nome: \"\",\r\n                        tipo: \"\"\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async function addArquivo(event: ChangeEvent<HTMLInputElement>) {\r\n        const e = event.target as HTMLInputElement;\r\n\r\n        if (e.files && e.files[0]) {\r\n            setExame({ ...exame, arquivos: [...exame.arquivos, e.files[0]] })\r\n        }\r\n    }\r\n\r\n    async function enviarExame(event: FormEvent) {\r\n        event.preventDefault();\r\n        let e = event.target as HTMLInputElement;\r\n        let title = e.childNodes[3] as HTMLInputElement;\r\n        let message = e.childNodes[5] as HTMLInputElement;\r\n        console.log(title.value, message.value);\r\n        let now = new Date();\r\n        let data = now.getDate() + \"/\" + (now.getMonth() + 1) + \"/\" + now.getFullYear();\r\n        setExame({\r\n            ...exame,\r\n            data: data,\r\n            desc: message.value,\r\n            titulo: title.value\r\n        });\r\n        let nAqrquivo = Array<string>();\r\n        await exame.arquivos.map((el) => {\r\n            nAqrquivo.push(\"https://backend-analise.000webhostapp.com/docs/\" + el.name);\r\n            let form = new FormData();\r\n            form.append(\"file\", el);\r\n\r\n            api.post(\"/\", form).then(res => {\r\n                console.log(res);\r\n            }).catch(console.error);\r\n        })\r\n        console.log(nAqrquivo);\r\n        if (paciente.uid !== '') {\r\n            await firestore.collection(\"Paciente\").doc(paciente.uid).collection(\"consultas\").add({ ...exame, arquivos: nAqrquivo }).then(res => {\r\n                console.log(res);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    if (storage) {\r\n        return (\r\n            <>\r\n                <Header tipo=\"medico\" user={user.user ? user.user : {}} />\r\n                {props.page === undefined ?\r\n                    <div className=\"inicio\">\r\n                        <div className=\"list-container\">\r\n                            <div><input type=\"text\" placeholder=\"Pesquisar\" onKeyPress={pesquisar} /></div>\r\n                            {pesquisa && paciente.nome !== '' && paciente.email !== '' ?\r\n                                <div className=\"paciente\">\r\n                                    <img src={paciente.imagem ? paciente.imagem : \"https://www.icirnigeria.org/wp-content/uploads/2018/07/noavatar.png\"} alt=\"\" />\r\n                                    <h2>{paciente.nome}</h2>\r\n                                    <p>{paciente.email}</p>\r\n\r\n                                    <form onSubmit={enviarExame}>\r\n                                        <input type=\"file\" name=\"file\" id=\"file\" accept=\".pdf\" onChange={addArquivo} />\r\n                                        <div className=\"lista-exames\">{exame.arquivos?.map((el, i) => {\r\n                                            return (\r\n                                                <li key={i}> <VscFilePdf className=\"icon-exames\" /> <p>{el.name}</p></li>\r\n                                            )\r\n                                        })\r\n                                        }</div>\r\n                                        <label htmlFor=\"t\">Tópico</label>\r\n                                        <input id=\"t\" type=\"text\" placeholder=\"Tópico\" />\r\n                                        <label htmlFor=\"m\">Menssagem</label>\r\n                                        <input id=\"m\" type=\"text\" placeholder=\"Menssagem\" />\r\n                                        <button type=\"submit\">Enviar</button>\r\n                                    </form>\r\n                                </div> : ''\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : props.page === \"perfil\" ?\r\n                        <div className=\"todo-perfil-medico\">\r\n                            <div className=\"todo\">\r\n                                <div className=\"topo\">\r\n                                    <div className=\"top-div\">\r\n                                        <img src={user.user.photoURL ? user.user.photoURL : 'https://www.icirnigeria.org/wp-content/uploads/2018/07/noavatar.png'}\r\n                                            alt=\"Não foi possivel carregar a imagem\"\r\n                                            title=\"Perfil\" />\r\n                                    </div>\r\n                                    <div className=\"top-div\">\r\n                                        <h3>{user.user ? user.user.displayName : 'undefined'}</h3>\r\n                                        <p>{user.user ? user.user.email : ''}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"bot\">\r\n                                    <form onSubmit={handlerAlterar}>\r\n                                        <label htmlFor=\"nome\">Nome</label>\r\n                                        <input id=\"nome\" type=\"text\" onChange={handlerChange} value={novoUser.nome ? novoUser.nome : ''} placeholder=\"Nome\" />\r\n\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <input id=\"email\" type=\"email\" onChange={handlerChange} value={novoUser.email ? novoUser.email : ''} placeholder=\"E-mail\" />\r\n\r\n                                        <label htmlFor=\"novaSenha\">Alterar senha</label>\r\n                                        <input id=\"novaSenha\" type=\"password\" onChange={handlerChange} value={novoUser.novaSenha} placeholder=\"Nova senha\" />\r\n                                        <small>* A senha deve ter mais de 5 caracters</small>\r\n                                        <label htmlFor=\"senha\">Digite sua senha atual </label>\r\n                                        <input id=\"senha\" type=\"password\" onChange={handlerChange} value={novoUser.senha} placeholder=\"Senha atual\" disabled={!alterar} />\r\n\r\n                                        <small>{err}</small>\r\n                                        <div className={\"loader \" + (!loding ? \"none\" : \"flex\")} ></div>\r\n                                        <button type=\"submit\" disabled={!alterar} >Alterar</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div> : ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return <div>Erro{history.push(\"/\")}</div>\r\n    }\r\n}\r\nexport default HomeMedico;\r\n\r\n","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\firestore.ts",[],"C:\\Users\\beltr\\React JS\\prontuario\\src\\paciente\\Home.tsx",["87","88","89"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\r\nimport Header from '../Header';\r\nimport auth from '../Service/auth';\r\nimport firestore from '../Service/firestore';\r\nimport { VscFilePdf } from 'react-icons/vsc';\r\nimport './Home.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    user?: any,\r\n    page?: string\r\n}\r\nclass Medico {\r\n    nome?: any\r\n    email?: any\r\n    constructor(nome?: any, email?: any) {\r\n        this.nome = nome;\r\n        this.email = email;\r\n    }\r\n}\r\ninterface Consulta { id: string, arquivos?: Array<string>, desc: string, titulo: string, data: string, medico: Medico }\r\n\r\nconst HomePaciente: React.FC<Props> = (props) => {\r\n    const history = useHistory();\r\n    let storage = localStorage.getItem('currentUser');\r\n\r\n    const [user, setUser] = useState(JSON.parse(storage ? storage : '{}'));\r\n    const [alterar, setAlterar] = useState(false);\r\n    const [err, setErr] = useState('');\r\n    const [novoM, setM] = useState(Array<Medico>());\r\n    const [consultas, setConsultas] = useState(Array<Consulta>());\r\n    const [novoUser, setNovoUser] = useState({\r\n        nome: user.user ? user.user.displayName : '',\r\n        email: user.user ? user.user.email : '',\r\n        novaSenha: '',\r\n        senha: ''\r\n    });\r\n\r\n\r\n    /*let a = new FormData();\r\n    a.append(\"file\", event.target.files?event.target.files[0] : '');\r\n    api.post('/', a)\r\n        .then(function (response) {\r\n            console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });*/\r\n\r\n    async function carregarConsultas() {\r\n        await firestore.collection(\"Paciente\").doc(user.user.uid).collection(\"consultas\").get().then(res => {\r\n            let a: Array<Consulta> = [];\r\n            res.forEach(async el => {\r\n                carregarMedico(el.data().medico);\r\n                a.push({\r\n                    desc: el.data().desc,\r\n                    arquivos: el.data().arquivos,\r\n                    titulo: el.data().titulo,\r\n                    id: el.id,\r\n                    data: el.data().data,\r\n                    medico: el.data().medico\r\n                })\r\n            });\r\n            setConsultas(a);\r\n        }).catch(() => {\r\n            return ('');\r\n        })\r\n    }\r\n\r\n    async function carregarMedico(id: string) {\r\n        await firestore?.collection(\"Medico\").doc(id).get().then(res => {\r\n            let obj = new Medico(res.data()?.nome, res.data()?.email);\r\n            let a: Array<Medico> = [obj];\r\n            setM([...novoM, obj])            \r\n        })\r\n\r\n\r\n    }\r\n\r\n    async function validar() {\r\n        await firestore.collection(\"Paciente\").doc(user.user.uid).get().then(res => {\r\n            if(!res.data()){\r\n                storage = null;\r\n                history.push('/')\r\n            }\r\n        }).catch(() => {storage = null; history.push('/')})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (storage) {            \r\n            validar();\r\n            carregarConsultas();\r\n            console.log(novoM);\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const [loding, setLoding] = useState(false)\r\n    function handlerChange(event: ChangeEvent<HTMLInputElement>) {\r\n        setAlterar(true);\r\n        switch (event.target.id) {\r\n            case 'nome':\r\n                setNovoUser({ ...novoUser, nome: event.target.value });\r\n                break;\r\n            case 'novaSenha':\r\n                setNovoUser({ ...novoUser, novaSenha: event.target.value });\r\n                break;\r\n            case 'email':\r\n                setNovoUser({ ...novoUser, email: event.target.value });\r\n                break;\r\n            case 'senha':\r\n                setNovoUser({ ...novoUser, senha: event.target.value });\r\n                break;\r\n        }\r\n    }\r\n\r\n    async function handlerAlterar(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (novoUser.senha !== '') {\r\n            setErr(\"\");\r\n            await auth.signInWithEmailAndPassword(user.user.email, novoUser.senha)\r\n                .then(async res => {\r\n                    setLoding(true);\r\n                    let email = user.user.email;\r\n                    let senha = novoUser.senha;\r\n                    let u = await auth.currentUser;\r\n                    if (novoUser.nome !== '') {\r\n                        await firestore.collection(\"Paciente\").doc(user.user.id).set({\r\n                            nome: novoUser.nome\r\n                        })\r\n                        await u?.updateProfile({\r\n                            displayName: novoUser.nome,\r\n                        }).then(function () {\r\n                            setErr(\"\");\r\n                            // Update successful.\r\n                        }).catch(function (error) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    if (novoUser.email !== '') {\r\n                        await firestore.collection(\"Paciente\").doc(user.user.id).set({\r\n                            email: novoUser.email\r\n                        })\r\n                        await u?.updateEmail(novoUser.email).then(function () {\r\n                            email = novoUser.email;\r\n                            setErr(\"\");\r\n                            // Update successful.\r\n                        }).catch(function (err) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    if (novoUser.novaSenha !== '' && novoUser.novaSenha.length > 5) {\r\n                        await u?.updatePassword(novoUser.novaSenha).then(function () {\r\n                            senha = novoUser.novaSenha;\r\n                            setErr(\"\");\r\n                        }).catch(function (errr) {\r\n                            // An error happened.\r\n                        });\r\n                    }\r\n                    else if (novoUser.novaSenha !== '') {\r\n                        setErr(\"Senha inválida\");\r\n                    }\r\n\r\n                    await auth.signInWithEmailAndPassword(email, senha)\r\n                        .then(u => {\r\n                            setUser(u);\r\n                            if (err === '') {\r\n                                alert(\"Alterado com sucesso!\");\r\n                            }\r\n\r\n                            localStorage.setItem('currentUser', JSON.stringify(u));\r\n                        }).catch(console.error);\r\n                    setLoding(false);\r\n\r\n                }, (err) => {\r\n                    if (err) {\r\n                        if (err.code === 'auth/wrong-password') {\r\n                            setErr(\"Senha incorreta\");\r\n                        }\r\n                        else if (err.code === 'auth/user-not-found') {\r\n                            setErr(\"Usuário não encontrado\");\r\n                        }\r\n                    }\r\n                }).catch(console.error);\r\n\r\n        }\r\n        else {\r\n            setErr('Digite sua senha atual');\r\n        }\r\n\r\n    }\r\n    if (!storage) {\r\n        return <div>Erro{history.push('/')}</div>\r\n        \r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Header tipo=\"paciente\" user={user.user ? user.user : {}} />\r\n                {props.page === undefined ?\r\n                    <div className=\"inicio\">\r\n                        <ul>\r\n                            {\r\n                                consultas?.map((el, j) => {\r\n                                    return (\r\n                                        <li key={el.id}>\r\n                                            <div className=\"medico\"><h3>{novoM[j]?.nome}</h3>\r\n                                                <small>{novoM[j]?.email}</small></div>\r\n                                            <small>{el.data}</small>\r\n                                            <div className=\"arquivos\">\r\n                                                {\r\n                                                    el.arquivos?.map((res, i) => {\r\n                                                        return (\r\n                                                            <a key={el.id + (i)}\r\n                                                                href={res} type=\"application/pdf\"\r\n                                                                target=\"_blank\">\r\n                                                                <VscFilePdf className=\"pdficon\" />\r\n                                                                <span>{res.split('/')[res.split('/').length - 1]}</span>\r\n                                                            </a>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <h4>{el.titulo}</h4>\r\n                                            <p>{el.desc} </p>\r\n                                        </li>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    :\r\n                    props.page === 'perfil' ?\r\n                        <div className=\"todo-perfil-medico\">\r\n                            <div className=\"todo\">\r\n                                <div className=\"topo\">\r\n                                    <div className=\"topo-div\">\r\n                                        <img src={user.user.photoURL ? user.user.photoURL : 'https://www.icirnigeria.org/wp-content/uploads/2018/07/noavatar.png'}\r\n                                            alt=\"Não foi possivel carregar a imagem\"\r\n                                            title=\"Perfil\" />\r\n                                    </div>\r\n                                    <div className=\"topo-div\">\r\n                                        <h3>{user.user ? user.user.displayName : 'undefined'}</h3>\r\n                                        <p>{user.user ? user.user.email : ''}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"bot\">\r\n                                    <form onSubmit={handlerAlterar}>\r\n                                        <label htmlFor=\"nome\">Nome</label>\r\n                                        <input id=\"nome\" type=\"text\" onChange={handlerChange} value={novoUser.nome ? novoUser.nome : ''} placeholder=\"Nome\" />\r\n\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <input id=\"email\" type=\"email\" onChange={handlerChange} value={novoUser.email ? novoUser.email : ''} placeholder=\"E-mail\" />\r\n\r\n                                        <label htmlFor=\"novaSenha\">Alterar senha</label>\r\n                                        <input id=\"novaSenha\" type=\"password\" onChange={handlerChange} value={novoUser.novaSenha} placeholder=\"Nova senha\" />\r\n                                        <small>* A senha deve ter mais de 5 caracters</small>\r\n                                        <label htmlFor=\"senha\">Digite sua senha atual </label>\r\n                                        <input id=\"senha\" type=\"password\" onChange={handlerChange} value={novoUser.senha} placeholder=\"Senha atual\" disabled={!alterar} />\r\n\r\n                                        <small>{err}</small>\r\n                                        <div className={\"loader \" + (!loding ? \"none\" : \"flex\")} ></div>\r\n                                        <button type=\"submit\" disabled={!alterar} >Alterar</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default HomePaciente;","C:\\Users\\beltr\\React JS\\prontuario\\src\\Service\\apiImg.ts",[],{"ruleId":"90","severity":1,"message":"91","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":21},{"ruleId":"90","severity":1,"message":"94","line":12,"column":13,"nodeType":"92","messageId":"93","endLine":12,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":15,"column":12,"nodeType":"92","messageId":"93","endLine":15,"endColumn":17},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","replacedBy":"103"},{"ruleId":"90","severity":1,"message":"104","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":28},{"ruleId":"90","severity":1,"message":"105","line":1,"column":30,"nodeType":"92","messageId":"93","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"106","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"107","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":26},{"ruleId":"90","severity":1,"message":"108","line":4,"column":28,"nodeType":"92","messageId":"93","endLine":4,"endColumn":34},{"ruleId":"90","severity":1,"message":"109","line":1,"column":51,"nodeType":"92","messageId":"93","endLine":1,"endColumn":60},{"ruleId":"90","severity":1,"message":"110","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":197,"column":39,"nodeType":"113","messageId":"114","endLine":197,"endColumn":41},{"ruleId":"90","severity":1,"message":"115","line":73,"column":17,"nodeType":"92","messageId":"93","endLine":73,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":95,"column":8,"nodeType":"118","endLine":95,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":218,"column":65,"nodeType":"122","endLine":218,"endColumn":80},"@typescript-eslint/no-unused-vars","'textSpanEnd' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'teste' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],["123"],["124"],"'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'BsArrowLeftShort' is defined but never used.","'BsPlus' is defined but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'a' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'carregarConsultas', 'novoM', 'storage', and 'validar'. Either include them or remove the dependency array.","ArrayExpression",["125"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [carregarConsultas, novoM, storage, validar]",{"range":"128","text":"129"},[3091,3093],"[carregarConsultas, novoM, storage, validar]"]